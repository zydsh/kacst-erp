-- BP 7.1.6 content: Component syschar: 3 persistence-version: 7.1.6

INSERT INTO C_C
	VALUES ("8d322bed-f6f2-48fc-b59c-77870565eb6e",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	'fms',
	'',
	0,
	"00000000-0000-0000-0000-000000000000",
	0,
	'');
INSERT INTO GD_MD
	VALUES ("c880649e-4f85-4c52-a44c-78552f505359",
	111,
	"8d322bed-f6f2-48fc-b59c-77870565eb6e",
	98,
	0,
	0,
	1,
	1,
	1,
	12,
	1,
	0,
	0,
	200,
	150,
	0,
	'4.1.17',
	'Finance::Fin::fms');
INSERT INTO GD_GE
	VALUES ("83d3c4f3-f16d-404a-9853-2607718286fb",
	"c880649e-4f85-4c52-a44c-78552f505359",
	"8d322bed-f6f2-48fc-b59c-77870565eb6e",
	103,
	0,
	'Finance::Fin::fms');
INSERT INTO GD_SHP
	VALUES ("83d3c4f3-f16d-404a-9853-2607718286fb");
INSERT INTO GD_CTR
	VALUES ("83d3c4f3-f16d-404a-9853-2607718286fb");
INSERT INTO DIM_ND
	VALUES (1830.000000,
	155.000000,
	"83d3c4f3-f16d-404a-9853-2607718286fb");
INSERT INTO DIM_GE
	VALUES (4100.000000,
	3100.000000,
	"83d3c4f3-f16d-404a-9853-2607718286fb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("83d3c4f3-f16d-404a-9853-2607718286fb",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("1df7dbb8-f5c1-477b-9a33-5ab47d73b140",
	5930.000000,
	3198.000000,
	"83d3c4f3-f16d-404a-9853-2607718286fb");
INSERT INTO DIM_CON
	VALUES ("a6848c14-9491-4d8f-a3df-c80c8e512e3b",
	4962.000000,
	3255.000000,
	"83d3c4f3-f16d-404a-9853-2607718286fb");
INSERT INTO GD_GE
	VALUES ("2304016b-f949-4b2b-8cc3-02a4b9d6cff6",
	"c880649e-4f85-4c52-a44c-78552f505359",
	"e958e1e6-0f5f-4631-bf16-a8d04e661a5a",
	108,
	0,
	'Finance::Fin::fms::Initialization');
INSERT INTO GD_SHP
	VALUES ("2304016b-f949-4b2b-8cc3-02a4b9d6cff6");
INSERT INTO GD_NCS
	VALUES ("2304016b-f949-4b2b-8cc3-02a4b9d6cff6");
INSERT INTO DIM_ND
	VALUES (200.000000,
	150.000000,
	"2304016b-f949-4b2b-8cc3-02a4b9d6cff6");
INSERT INTO DIM_GE
	VALUES (4838.000000,
	3100.000000,
	"2304016b-f949-4b2b-8cc3-02a4b9d6cff6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2304016b-f949-4b2b-8cc3-02a4b9d6cff6",
	0,
	"83d3c4f3-f16d-404a-9853-2607718286fb");
INSERT INTO GD_GE
	VALUES ("2b7faaf3-270c-44e8-be4e-0f866884fb2b",
	"c880649e-4f85-4c52-a44c-78552f505359",
	"84b7e49f-98e2-4539-b496-50575c189964",
	94,
	0,
	'Finance::Fin::fms::UI::Finance');
INSERT INTO GD_CON
	VALUES ("2b7faaf3-270c-44e8-be4e-0f866884fb2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("423b949c-38a0-4900-85fe-37760a005cdd",
	"2b7faaf3-270c-44e8-be4e-0f866884fb2b",
	0,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"423b949c-38a0-4900-85fe-37760a005cdd");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"423b949c-38a0-4900-85fe-37760a005cdd",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("423b949c-38a0-4900-85fe-37760a005cdd",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d8830a75-b342-4c0a-ac4e-d8a2c651d815",
	"2b7faaf3-270c-44e8-be4e-0f866884fb2b",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"d8830a75-b342-4c0a-ac4e-d8a2c651d815");
INSERT INTO DIM_GE
	VALUES (5947.000000,
	3160.000000,
	"d8830a75-b342-4c0a-ac4e-d8a2c651d815",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d8830a75-b342-4c0a-ac4e-d8a2c651d815",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("df655453-58a5-43fc-b74f-7916d03e0898",
	"2b7faaf3-270c-44e8-be4e-0f866884fb2b",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"df655453-58a5-43fc-b74f-7916d03e0898");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"df655453-58a5-43fc-b74f-7916d03e0898",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("df655453-58a5-43fc-b74f-7916d03e0898",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("820b334a-f2eb-4203-9d2a-272328604cdc",
	"2b7faaf3-270c-44e8-be4e-0f866884fb2b",
	"00000000-0000-0000-0000-000000000000",
	"7b839b4b-a02a-4d28-a191-61c8b9ae1b7f",
	"e2dcff70-9c2b-4866-9798-ea3b1e6580b4");
INSERT INTO DIM_WAY
	VALUES ("7b839b4b-a02a-4d28-a191-61c8b9ae1b7f",
	5930.000000,
	3198.000000,
	"2b7faaf3-270c-44e8-be4e-0f866884fb2b",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("e2dcff70-9c2b-4866-9798-ea3b1e6580b4",
	6005.000000,
	3198.000000,
	"2b7faaf3-270c-44e8-be4e-0f866884fb2b",
	"00000000-0000-0000-0000-000000000000",
	"7b839b4b-a02a-4d28-a191-61c8b9ae1b7f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"2b7faaf3-270c-44e8-be4e-0f866884fb2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2b7faaf3-270c-44e8-be4e-0f866884fb2b",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("1df7dbb8-f5c1-477b-9a33-5ab47d73b140",
	"00000000-0000-0000-0000-000000000000",
	"2b7faaf3-270c-44e8-be4e-0f866884fb2b");
INSERT INTO GD_GE
	VALUES ("2c4ff756-b227-4b3b-9414-77bd16a1c1a6",
	"c880649e-4f85-4c52-a44c-78552f505359",
	"5efb7de1-f405-4ba8-9530-0fa304c690bc",
	108,
	0,
	'Finance::Fin::fms::Types');
INSERT INTO GD_SHP
	VALUES ("2c4ff756-b227-4b3b-9414-77bd16a1c1a6");
INSERT INTO GD_NCS
	VALUES ("2c4ff756-b227-4b3b-9414-77bd16a1c1a6");
INSERT INTO DIM_ND
	VALUES (200.000000,
	150.000000,
	"2c4ff756-b227-4b3b-9414-77bd16a1c1a6");
INSERT INTO DIM_GE
	VALUES (5058.000000,
	3100.000000,
	"2c4ff756-b227-4b3b-9414-77bd16a1c1a6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2c4ff756-b227-4b3b-9414-77bd16a1c1a6",
	0,
	"83d3c4f3-f16d-404a-9853-2607718286fb");
INSERT INTO GD_GE
	VALUES ("87367c4e-ab04-412e-8490-ef542c72efc4",
	"c880649e-4f85-4c52-a44c-78552f505359",
	"d40e5743-c278-4981-9ac4-d4bbf63cedfd",
	108,
	0,
	'Finance::Fin::fms::Tests');
INSERT INTO GD_SHP
	VALUES ("87367c4e-ab04-412e-8490-ef542c72efc4");
INSERT INTO GD_NCS
	VALUES ("87367c4e-ab04-412e-8490-ef542c72efc4");
INSERT INTO DIM_ND
	VALUES (200.000000,
	150.000000,
	"87367c4e-ab04-412e-8490-ef542c72efc4");
INSERT INTO DIM_GE
	VALUES (5278.000000,
	3100.000000,
	"87367c4e-ab04-412e-8490-ef542c72efc4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("87367c4e-ab04-412e-8490-ef542c72efc4",
	0,
	"83d3c4f3-f16d-404a-9853-2607718286fb");
INSERT INTO GD_GE
	VALUES ("95270249-7c45-4cf6-b4b1-c0fd07cc88b3",
	"c880649e-4f85-4c52-a44c-78552f505359",
	"4d16c76f-7499-433f-bf47-4cf1149390b7",
	108,
	0,
	'Finance::Fin::fms::Financing');
INSERT INTO GD_SHP
	VALUES ("95270249-7c45-4cf6-b4b1-c0fd07cc88b3");
INSERT INTO GD_NCS
	VALUES ("95270249-7c45-4cf6-b4b1-c0fd07cc88b3");
INSERT INTO DIM_ND
	VALUES (200.000000,
	150.000000,
	"95270249-7c45-4cf6-b4b1-c0fd07cc88b3");
INSERT INTO DIM_GE
	VALUES (5498.000000,
	3100.000000,
	"95270249-7c45-4cf6-b4b1-c0fd07cc88b3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("95270249-7c45-4cf6-b4b1-c0fd07cc88b3",
	0,
	"83d3c4f3-f16d-404a-9853-2607718286fb");
INSERT INTO GD_GE
	VALUES ("d3d13229-b2c1-4e09-8c52-02b29cec204d",
	"c880649e-4f85-4c52-a44c-78552f505359",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0",
	93,
	0,
	'Finance::Fin::fms::ORM::ORM');
INSERT INTO GD_CON
	VALUES ("d3d13229-b2c1-4e09-8c52-02b29cec204d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("6b039319-0c56-4dc2-9588-0d49f1eb2006",
	"d3d13229-b2c1-4e09-8c52-02b29cec204d",
	0,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"6b039319-0c56-4dc2-9588-0d49f1eb2006");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"6b039319-0c56-4dc2-9588-0d49f1eb2006",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6b039319-0c56-4dc2-9588-0d49f1eb2006",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d1eb4e13-7fbf-454e-bbd9-d255e5a2942a",
	"d3d13229-b2c1-4e09-8c52-02b29cec204d",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"d1eb4e13-7fbf-454e-bbd9-d255e5a2942a");
INSERT INTO DIM_GE
	VALUES (4921.000000,
	3283.000000,
	"d1eb4e13-7fbf-454e-bbd9-d255e5a2942a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d1eb4e13-7fbf-454e-bbd9-d255e5a2942a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d65f6229-8042-4040-aba6-9754c7111806",
	"d3d13229-b2c1-4e09-8c52-02b29cec204d",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"d65f6229-8042-4040-aba6-9754c7111806");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d65f6229-8042-4040-aba6-9754c7111806",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d65f6229-8042-4040-aba6-9754c7111806",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("7763f6b4-b4aa-4e10-be0d-d643d115631e",
	"d3d13229-b2c1-4e09-8c52-02b29cec204d",
	"00000000-0000-0000-0000-000000000000",
	"e18a508e-8335-4dd0-90e5-3ccb83dc6dae",
	"90df3753-599d-44bc-addf-55810df176ec");
INSERT INTO DIM_WAY
	VALUES ("e18a508e-8335-4dd0-90e5-3ccb83dc6dae",
	4962.000000,
	3255.000000,
	"d3d13229-b2c1-4e09-8c52-02b29cec204d",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("90df3753-599d-44bc-addf-55810df176ec",
	4961.000000,
	3324.000000,
	"d3d13229-b2c1-4e09-8c52-02b29cec204d",
	"00000000-0000-0000-0000-000000000000",
	"e18a508e-8335-4dd0-90e5-3ccb83dc6dae");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d3d13229-b2c1-4e09-8c52-02b29cec204d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d3d13229-b2c1-4e09-8c52-02b29cec204d",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("a6848c14-9491-4d8f-a3df-c80c8e512e3b",
	"00000000-0000-0000-0000-000000000000",
	"d3d13229-b2c1-4e09-8c52-02b29cec204d");
INSERT INTO DIM_DIA
	VALUES ("c880649e-4f85-4c52-a44c-78552f505359",
	'',
	1.000000,
	0.000000,
	0.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO C_PO
	VALUES ("b03ef202-9610-4966-9106-e832fced131e",
	"8d322bed-f6f2-48fc-b59c-77870565eb6e",
	'UI',
	0,
	0);
INSERT INTO C_IR
	VALUES ("84b7e49f-98e2-4539-b496-50575c189964",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	"00000000-0000-0000-0000-000000000000",
	"b03ef202-9610-4966-9106-e832fced131e");
INSERT INTO C_P
	VALUES ("84b7e49f-98e2-4539-b496-50575c189964",
	'Finance',
	'Unnamed Interface',
	'',
	'fms::UI::Finance');
INSERT INTO SPR_PEP
	VALUES ("8caf4319-b952-480a-9b88-bbd9af2804ae",
	"6859b7aa-16e9-436c-88b1-66c0bf7f2cbf",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("8caf4319-b952-480a-9b88-bbd9af2804ae",
	'Initialize',
	'',
	'::Initialize();',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("6859b7aa-16e9-436c-88b1-66c0bf7f2cbf",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'Initialize',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("68ec02e2-2e5f-46c0-98b2-f3f945c8e339",
	"65121dc7-3592-49f6-9f96-1cf25a688cf6",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("68ec02e2-2e5f-46c0-98b2-f3f945c8e339",
	'ReadBudgets',
	'',
	'select many budgets from instances of Budget; 

if (not empty budgets) 	
	for each budget in budgets
			UI::SendBudgets( Year:budget.Year, Ceiling:budget.Ceiling, Requested:budget.Requested, CeilingRevenue:budget.CeilingRevenue, RequestedRevenue:budget.RequestedRevenue);	
	end for; 
  else  
 
  	UI::Reply( msg:"There are no budgets registered in the system", state:False );  
  end if; ',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("65121dc7-3592-49f6-9f96-1cf25a688cf6",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadBudgets',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("32424e3b-bb9a-42d8-927d-5b4a0f13494a",
	"981b3bfb-f8e5-468d-87ef-6341359c2931",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("32424e3b-bb9a-42d8-927d-5b4a0f13494a",
	'SendBudgets',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("981b3bfb-f8e5-468d-87ef-6341359c2931",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SendBudgets',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("3be763d8-f081-4b48-be89-54d8ebae2d8a",
	"02b58a71-1200-4020-bdc9-809f601deab1",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("3be763d8-f081-4b48-be89-54d8ebae2d8a",
	'Reply',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("02b58a71-1200-4020-bdc9-809f601deab1",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'Reply',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("b6ad793f-bf29-4d4e-afc0-ef503b84c74e",
	"b6724746-1a25-4086-8a5f-53fae643a17f",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("b6ad793f-bf29-4d4e-afc0-ef503b84c74e",
	'SendRequested',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("b6724746-1a25-4086-8a5f-53fae643a17f",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SendRequested',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("4e78b612-ff82-4d2d-ad72-912f0f7ba07f",
	"dd6db19b-bdef-4d21-b22a-6b03d86bfa5a",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("4e78b612-ff82-4d2d-ad72-912f0f7ba07f",
	'ReadBudgetAccount',
	'Reads accounts and sub-accounts of a the current year budget. If the code
represents a sub-account it will returen the sub-account only, if the code
sent represents the account, it sends the contents of the accounts and
all of its sub-accounts.',
	'select any account from instances of AccountSpecification where selected.Code ==param.Code;

if (not empty account)  
	select one expenditure related by account->Expenditure[R180];
	select many subaccounts related by account->AccountSpecification[R80.''divided''];	
	if (not empty expenditure) 
		UI::SendAccountFunds( Code:account.Code, Name:account.Name, New:account.New, Ceiling:expenditure.CeilingFund, Requested:expenditure.RequestedFund, CeilingRevenue:expenditure.CeilingRevenue, RequestedRevenue:expenditure.RequestedRevenue);
		UI::Reply( msg:"Account fund sent", state:True );  
		LOG::LogInfo(message:"Sent: Account code "+ account.Code); 
		LOG::LogReal(message:"Ceiling:", r:expenditure.CeilingFund);
		LOG::LogReal(message:"Requested:", r:expenditure.RequestedFund);
		LOG::LogReal(message:"C-Revenue:", r:expenditure.CeilingRevenue);
		LOG::LogReal(message:"R-Revenue:", r:expenditure.RequestedRevenue);

		// +expenditure.CeilingFund+" Managing Departmenet: "+ "");

		for each subaccount in subaccounts
			select many budgetAccs related by subaccount->Account[R202.''budgetize''];
				ceiling = 0;
				requested = 0;
				revenueCeiling = 0;
				revenueRequested=0;
			for each bgt in budgetAccs
				
				select one ceilingSubtype related by bgt->Ceiling[R190];
				if (not empty ceilingSubtype)
					ceiling = ceilingSubtype.Fund;
					revenueCeiling = ceilingSubtype.Revenue;
				end if;
				select one requestedSubtype related by bgt->Requested[R190];
				if (not empty requestedSubtype)
					requested = requestedSubtype.Fund;
					revenueRequested = requestedSubtype.Revenue;
				end if;
			end for; 
			UI::SendAccountFunds( Code:subaccount.Code, Name:subaccount.Name, New: subaccount.New, Ceiling:ceiling, Requested:requested, CeilingRevenue:revenueCeiling, RequestedRevenue:revenueRequested);
  			UI::Reply( msg:"Subaccount funds sent", state:True );  
  			LOG::LogInfo(message:"Sent: Account code "+ subaccount.Code); 
			LOG::LogReal(message:"Ceiling:", r:ceiling);
			LOG::LogReal(message:"Requested:", r:requested);
			LOG::LogReal(message:"C-Revenue:", r:revenueCeiling);
			LOG::LogReal(message:"R-Revenue:", r:revenueRequested);


		end for;	
	else
			select many budgetAccs related by account->Account[R202.''budgetize''];
				ceiling = 0;
				requested = 0;
				revenueCeiling = 0;
				revenueRequested=0;
			for each bgt in budgetAccs
				
				select one ceilingSubtype related by bgt->Ceiling[R190];
				if (not empty ceilingSubtype)
					ceiling = ceilingSubtype.Fund;
					revenueCeiling = ceilingSubtype.Revenue;
				end if;
				select one requestedSubtype related by bgt->Requested[R190];
				if (not empty requestedSubtype)
					requested = requestedSubtype.Fund;
					revenueRequested = requestedSubtype.Revenue;
				end if;
			end for; 
				UI::SendAccountFunds( Code:account.Code, Ceiling:ceiling, Name:account.Name, New:account.New, Requested:requested, CeilingRevenue:revenueCeiling, RequestedRevenue:revenueRequested);

	end if;
end if;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("dd6db19b-bdef-4d21-b22a-6b03d86bfa5a",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadBudgetAccount',
	'Reads accounts and sub-accounts of a the current year budget. If the code
represents a sub-account it will returen the sub-account only, if the code
sent represents the account, it sends the contents of the accounts and
all of its sub-accounts.',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("cdb99240-640b-4f03-9f54-92fbf3cc520f",
	"1f6a3814-0c98-4dd6-bac0-080a5a7a0c35",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("cdb99240-640b-4f03-9f54-92fbf3cc520f",
	'SendCeiling',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("1f6a3814-0c98-4dd6-bac0-080a5a7a0c35",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SendCeiling',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("ca73f249-e868-4388-b482-56a046f73b6e",
	"c5d4f896-7924-4716-a86c-318e3273e594",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("ca73f249-e868-4388-b482-56a046f73b6e",
	'AcceptRequested',
	'',
	'select any accountSpec from instances of AccountSpecification where selected.Code == param.Code; 
select many accounts related by accountSpec->Account[R202.''budgetize''];
if (not empty accounts)
	for each account in accounts
		select one requested related by account->Requested[R190];
		if (not empty requested)
			generate Account1:Accept to account;
		else
			generate Account2:Reject to account;
		end if;
	end for;
else
	select many subaccounts related by accountSpec->AccountSpecification[R80.''divided''];
	if (not empty subaccounts)
		for each subaccount in subaccounts
			select many budgetAccounts related by subaccount->Account[R202.''budgetize''];
			for each ba in budgetAccounts
				select one requested related by ba->Requested[R190];
				if (not empty requested)
					generate Account1:Accept to ba;
				else
					generate Account2:Reject to ba;
				end if;
			end for;
		end for;
	end if;
end if;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("c5d4f896-7924-4716-a86c-318e3273e594",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'AcceptRequested',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("6d8f28a6-f174-4e38-9d54-c4b2f9162417",
	"3d2a89e7-d63d-4e66-ba68-1a0a834594d5",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("6d8f28a6-f174-4e38-9d54-c4b2f9162417",
	'AcceptCeiling',
	'',
	'select any accountSpec from instances of AccountSpecification where selected.Code == param.Code; 
select many accounts related by accountSpec->Account[R202.''budgetize''];
if (not empty accounts)
	for each account in accounts
		select one ceiling related by account->Ceiling[R190];
		if (not empty ceiling)
			generate Account1:Accept to account;
		else
			generate Account2:Reject to account;
		end if;
	end for;
else
	select many subaccounts related by accountSpec->AccountSpecification[R80.''divided''];
	if (not empty subaccounts)
		for each subaccount in subaccounts
			select many budgetAccounts related by subaccount->Account[R202.''budgetize''];
			for each ba in budgetAccounts
				select one ceiling related by ba->Ceiling[R190];
				if (not empty ceiling)
					generate Account1:Accept to ba;
				else
					generate Account2:Reject to ba;
				end if;
			end for;
		end for;
	end if;
end if;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("3d2a89e7-d63d-4e66-ba68-1a0a834594d5",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'AcceptCeiling',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("7eacf167-7d01-49a9-8545-9798e43402ca",
	"4af6aae3-9881-4881-b6df-74baed99177c",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("7eacf167-7d01-49a9-8545-9798e43402ca",
	'CreateCashJournal',
	'',
	'

select any cashJournal from instances of Journal where selected.Name == "Cash";

if (empty cashJournal)
	create object instance cashJ of Journal;
	cashJ.Name = "Cash";
	cashJ.Description= "Records cash payments for internal transactions";
	

end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("4af6aae3-9881-4881-b6df-74baed99177c",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'CreateCashJournal',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("fa6c80d5-002a-4a73-8291-6ea0b8458836",
	"71e6c481-f6b0-4dc2-abd7-cc835dc3dbfd",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("fa6c80d5-002a-4a73-8291-6ea0b8458836",
	'OperationalizeBudget',
	'',
	'select any accountSpec from instances of AccountSpecification where selected.Code == param.Code; 
select many accounts related by accountSpec->Account[R202.''budgetize''];
for each account in accounts
		generate Account4:Open to account;
end for;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("71e6c481-f6b0-4dc2-abd7-cc835dc3dbfd",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'OperationalizeBudget',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("9d1fefc7-9560-4f59-90c5-b22ff3740781",
	"0029c564-7df3-4dc3-b1d4-213ee84017e0",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("9d1fefc7-9560-4f59-90c5-b22ff3740781",
	'CreateExpensesJournal',
	'',
	'

select any expensesJ from instances of Journal where selected.Name == param.Name;

if (empty expensesJ)
	create object instance expJ of Journal;
	expJ.Name = param.Name;
	expJ.Description= param.Description;
	
	//create object instance dec of DoubleEntryColumn;
	//dec.Title = "Debit Cash/ Credit Employee Compensation ";
end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("0029c564-7df3-4dc3-b1d4-213ee84017e0",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'CreateExpensesJournal',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("1a383467-1437-496b-93f2-f4b604b00b54",
	"cad988db-7e9b-4e52-9100-0b43eaedb0a7",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("1a383467-1437-496b-93f2-f4b604b00b54",
	'RecordSalaryEntry',
	'',
	'
select any journal from instances of Journal where selected.Name == "Salary";
if (not empty journal)
	journal.MakeEntry( Date:param.Date, Description:param.Description, Amount:param.Amount );
end if;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("cad988db-7e9b-4e52-9100-0b43eaedb0a7",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'RecordSalaryEntry',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("15950020-b631-4080-8153-1b3c026b1c1a",
	"83844281-52e7-47ba-963e-bcf6b9a2f440",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("15950020-b631-4080-8153-1b3c026b1c1a",
	'OperationalizeAccount',
	'',
	'select any accountSpec from instances of AccountSpecification where selected.Code == param.Code; 
select many accounts related by accountSpec->Account[R202.''budgetize''];
if (not empty accounts)
	for each account in accounts
		generate Account4:Open to account;
	end for;
else
	select many subaccounts related by accountSpec->AccountSpecification[R80.''divided''];
	if (not empty subaccounts)
		for each subaccount in subaccounts
			select many budgetAccounts related by subaccount->Account[R202.''budgetize''];
			for each ba in budgetAccounts
				generate Account4:Open to ba;
			end for;
		end for;
	end if;
end if;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("83844281-52e7-47ba-963e-bcf6b9a2f440",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'OperationalizeAccount',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("0489b01a-8c34-452b-aec8-f5308802fd18",
	"66540b4a-f006-4f50-bbee-e5c4357da8aa",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("0489b01a-8c34-452b-aec8-f5308802fd18",
	'SingleColumnEntry',
	'',
	'
select any journal from instances of Journal where selected.Name == param.JournalName;
create object instance entry of Entry;
entry.Date = param.Date;
entry.Description = param.Description;
create object instance amount of Amount;
amount.Amount = param.Amount;
relate entry to amount across R40;

select one column related by journal->Column[R160.''has single''];
relate amount to column across R130;
select one debit related by column->AccountSpecification[R140.''debits'']->Account[R170.''operates''];
select one credit related by column->AccountSpecification[R150.''credits'']->Account[R170.''operates''];

relate amount to debit across R30.''debits'';
relate amount to credit across R50.''credits'';
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("66540b4a-f006-4f50-bbee-e5c4357da8aa",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SingleColumnEntry',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("a8f28913-9a09-4091-a074-5d6cfad99dd8",
	"1a5bf26d-531a-4a0b-88c4-c813ed57ca06",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("a8f28913-9a09-4091-a074-5d6cfad99dd8",
	'CreateJournal',
	'',
	'

select any journal from instances of Journal where selected.Name == param.Name;

if (empty journal)
	create object instance newj of Journal;
	newj.Name = param.Name;
	newj.Description = param.Name;
	create object instance column of Column;
	column.Title = param.ColumnTitle;
	column.Description = param.ColumnDescription;	
	select any accountDebit from instances of AccountSpecification where selected.Code ==param.DebitAccountCode;
	select any accountCredit from instances of AccountSpecification where selected.Code ==param.CreditAccountCode;

	if ( not empty accountDebit) and (not empty accountDebit)
		relate column to accountDebit across R140.''debits'';
		relate column to accountCredit across R150.''credits'';
	end if;
end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("1a5bf26d-531a-4a0b-88c4-c813ed57ca06",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'CreateJournal',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("d04fba87-bad3-4017-abae-0de68ff62439",
	"1436beee-420c-431f-b5b2-c7da633acd31",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("d04fba87-bad3-4017-abae-0de68ff62439",
	'AddJournalColumn',
	'',
	'select any journal from instances of Journal where selected.Name == param.JournalName;

if (not empty journal)
	create object instance column of Column;
	column.Title = param.ColumnTitle;
	column.Description = param.ColumnDescription;	
	select any accountDebit from instances of AccountSpecification where selected.Code ==param.DebitAccountCode;
	select any accountCredit from instances of AccountSpecification where selected.Code ==param.CreditAccountCode;

	if ( not empty accountDebit) and (not empty accountDebit)
		relate column to accountDebit across R140.''debits'';
		relate column to accountCredit across R150.''credits'';
	end if;
end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("1436beee-420c-431f-b5b2-c7da633acd31",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'AddJournalColumn',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("3cc51cf7-7715-45fe-b892-5e1b9a2d6f29",
	"6a03da54-e74f-4e6e-af7f-e9c0bac1fa3c",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("3cc51cf7-7715-45fe-b892-5e1b9a2d6f29",
	'ReadRequested',
	'',
	'select any budget from instances of Budget where selected.Year == param.BudgetYear; 
select many accounts related by budget->Account[R100.''assigned''];

if (not empty accounts) 
	for each account in accounts
		select one requested related by account->Requested[R190];
		if (not empty requested)
			select one spec related by account->AccountSpecification[R202.''budgetized by''];
			UI::SendRequested( Code:spec.Code, Name:spec.Name, RequestedFund:requested.Fund, RequestedRevenue:requested.Revenue );
		end if;
	end for;
end if;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("6a03da54-e74f-4e6e-af7f-e9c0bac1fa3c",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadRequested',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("eaff4c5b-f402-4cde-8218-9d4fdb4de564",
	"91d79d8a-bc07-4781-9771-bf41b16882d8",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("eaff4c5b-f402-4cde-8218-9d4fdb4de564",
	'ReadBudget',
	'',
	'select any budget from instances of Budget where selected.Year == param.Year; 

if (not empty budget) 	
 		UI::SendBudgets( Year:budget.Year, Ceiling:budget.Ceiling, Requested:budget.Requested, CeilingRevenue:budget.CeilingRevenue, RequestedRevenue:budget.RequestedRevenue);	
 else  
 
  	UI::Reply( msg:"There are no budgets registered in the system", state:False );  
end if; ',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("91d79d8a-bc07-4781-9771-bf41b16882d8",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadBudget',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("81eaab91-3d98-4f3b-b419-3e41ec315b62",
	"5dab3256-d9fc-42e8-9b6b-bda3055328e3",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("81eaab91-3d98-4f3b-b419-3e41ec315b62",
	'SendAccountFunds',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("5dab3256-d9fc-42e8-9b6b-bda3055328e3",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SendAccountFunds',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("cb58ace9-ffdf-40bb-8c22-f9e5a2fa19bb",
	"f4c86c50-3cbb-4efe-8ae7-d2336046cde3",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("cb58ace9-ffdf-40bb-8c22-f9e5a2fa19bb",
	'ReadAccepted',
	'',
	'select many accounts from instances of AccountSpecification;
for each account in accounts
select one expenditure related by account->Expenditure[R180];
if (empty expenditure)
	select many bas related by account->Account[R202.''budgetize''];
	if (not empty bas)
		for each ba in bas
			generate Account6:AcceptRequested to ba;
		end for;
	end if;
end if;
end for;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("f4c86c50-3cbb-4efe-8ae7-d2336046cde3",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadAccepted',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("a597a557-627c-4307-9dc6-d800edad04a4",
	"67fe4628-f24e-4262-b8dd-ba67c1070cf8",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("a597a557-627c-4307-9dc6-d800edad04a4",
	'ReadRejected',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("67fe4628-f24e-4262-b8dd-ba67c1070cf8",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadRejected',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("1dbad819-882f-44ba-803e-45b54856db8d",
	"74267771-8f23-4b1d-a0ec-7edad8977687",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("1dbad819-882f-44ba-803e-45b54856db8d",
	'SendAccount',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("74267771-8f23-4b1d-a0ec-7edad8977687",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SendAccount',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("71f78ed0-dada-44da-a6b9-3776be676df5",
	"7c0b0b8e-8aed-4f78-8fba-f2671976d884",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("71f78ed0-dada-44da-a6b9-3776be676df5",
	'ReadAccounts',
	'',
	'select many accounts from instances of AccountSpecification;

for each account in accounts
	select one expenditure related by account->Expenditure[R180];
	if (empty expenditure)
		select one opaccount related by account->Account[R170.''operates''];
		if (not empty opaccount)
			UI::SendAccount( Code:account.Code, Name:account.Name, Fund:opaccount.OpeningBalance, Revenue:0 );
		end if;
	end if;
end for;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("7c0b0b8e-8aed-4f78-8fba-f2671976d884",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadAccounts',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("0e41f1bb-ff46-455e-9cf8-4947a5aca03b",
	"9035e841-f394-4cac-949b-3dbd8846ee1b",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("0e41f1bb-ff46-455e-9cf8-4947a5aca03b",
	'AcceptAllRequested',
	'',
	'select many accountSpec from instances of AccountSpecification; 
select many accounts related by accountSpec->Account[R202.''budgetize''];
if (not empty accounts)
	for each account in accounts
		select one requested related by account->Requested[R190];
		if (not empty requested)
			generate Account1:Accept to account;
		else
			generate Account2:Reject to account;
		end if;
	end for;
end if;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("9035e841-f394-4cac-949b-3dbd8846ee1b",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'AcceptAllRequested',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("4ac14223-9a08-4a38-b9ba-4dc10bc60606",
	"2066a758-e796-4d69-9ac9-ed03819719e5",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("4ac14223-9a08-4a38-b9ba-4dc10bc60606",
	'AcceptAllCeiling',
	'',
	'select many accountSpec from instances of AccountSpecification; 
select many accounts related by accountSpec->Account[R202.''budgetize''];
if (not empty accounts)
	for each account in accounts
		select one ceiling related by account->Ceiling[R190];
		if (not empty ceiling)
			generate Account1:Accept to account;
		else
			generate Account2:Reject to account;
		end if;
	end for;
end if;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("2066a758-e796-4d69-9ac9-ed03819719e5",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'AcceptAllCeiling',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("bd700da6-5722-47de-98ad-2f410af1f417",
	"06fde7aa-a08d-478c-bcaa-ea497aac3e67",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("bd700da6-5722-47de-98ad-2f410af1f417",
	'CreateAccount',
	'',
	'select any account from instances of AccountSpecification where selected.Code==param.ParentAccount;

if (not empty account)
	create object instance acc of AccountSpecification;
	acc.Code = param.Code;
	acc.Name = param.Name;
	acc.Description= param.Description;
	relate account to acc across R80.''part'';
	
end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("06fde7aa-a08d-478c-bcaa-ea497aac3e67",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'CreateAccount',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("701487d9-90ae-4587-970d-b5b1b9e4e791",
	"d257ef17-118c-46f2-baee-50fc1bea26d2",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("701487d9-90ae-4587-970d-b5b1b9e4e791",
	'CreateProgram',
	'',
	'select any program from instances of AccountSpecification where selected.Code==param.Code;

if (empty program)
	create object instance program of AccountSpecification;
	program.Code = param.Code;
	program.Name = param.Name;
	program.Description= param.Description;
	create object instance subProgram of Program;
	subProgram.DedicatedFunds = param.DedicatedFunds;
	subProgram.Duration = param.Duration;
	subProgram.StartDate = param.StartDate;
	relate program to subProgram across R180;
	select any account from instances of AccountSpecification where selected.Code==param.Account;
	if (not empty account)
		relate account to subProgram across R210;
	end if;

end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("d257ef17-118c-46f2-baee-50fc1bea26d2",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'CreateProgram',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("a41456a2-69f1-4107-aba7-d2ef6e5d126f",
	"02e23735-c427-4a5e-9847-9a45a7aec390",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("a41456a2-69f1-4107-aba7-d2ef6e5d126f",
	'ReadPrograms',
	'',
	'select many programs from instances of Program; 

if (not empty programs)
	for each program in programs 
		select one parantProgram related by program->AccountSpecification[R180];
		select one subaccount related by program->AccountSpecification[R210.''earmarks''];
		select one operationProgram related by parantProgram->Account[R170.''operates''];
		if (not empty subaccount) and (not empty operationProgram) and (not empty subaccount)
			UI::SendPrograms( Code:parantProgram.Code, Name:parantProgram.Name, Description:parantProgram.Description,
			StartDate:program.StartDate, Duration:program.Duration, AccountCode:subaccount.Code, AccountName:subaccount.Name, 
			DedicatedFunds:program.DedicatedFunds, TransferDebit:operationProgram.TransferDebit, 
			TransferCredit:operationProgram.TransferCredit, FundsAfterTransfers:program.FundsAfterTransfers, 
			PastYearsSpending:program.PastYearsSpending, CurrentYearBudget:operationProgram.OpeningBalance, 
			Commitments:program.Commitments, RemainingFunds:program.RemainingFunds, Percentage:program.Percentage );
			
			UI::Reply( msg:"An operationalized program is sent", state:True );  

		elif (not empty parantProgram)
			UI::SendPrograms( Code:parantProgram.Code, Name:parantProgram.Name, Description:parantProgram.Description,
			StartDate:program.StartDate, Duration:program.Duration, AccountCode:"", AccountName:"", 
			DedicatedFunds:program.DedicatedFunds, TransferDebit:0, 
			TransferCredit:0, FundsAfterTransfers:0, 
			PastYearsSpending:0, CurrentYearBudget:0, 
			Commitments:0, RemainingFunds:0, Percentage:0 );
			
			UI::Reply( msg:"A new program sent", state:True );  
		else
			
			UI::Reply( msg:"Was not able to send program", state:False );  

		end if;

	end for;
end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("02e23735-c427-4a5e-9847-9a45a7aec390",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadPrograms',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("72503029-779a-42a1-aa10-e52ccadc3fe7",
	"b889a567-01cd-4c5f-8256-fb6cfebed0e1",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("72503029-779a-42a1-aa10-e52ccadc3fe7",
	'ReadTAccount',
	'',
	'select any account from instances of AccountSpecification where selected.Code ==param.Code;

if (not empty account)
		select many subaccounts related by account->AccountSpecification[R80.''divided''];
		select one expenditute related by account->AccountSpecification[R80.''part'']->Expenditure[R180];
		if ( empty subaccounts) and (not empty expenditute)
			select many credits related by account->Account[R170.''operates'']->Amount[R50.''credited by''];
			select many debits related by account->Account[R170.''operates'']->Amount[R30.''debited by''];
			select many tcredits related by account->Account[R170.''operates'']->Amount[R230.''transfer credit of''];
			select many tdebits related by account->Account[R170.''operates'']->Amount[R240.''transfer debit of''];

			if (not empty credits)
				for each credit in credits
					select one entry related by credit->Entry[R40.''recorded for''];
					UI::SendTAccount( Code:account.Code, Amount:credit.Amount, Date: entry.Date, Description: entry.Description, Type:"Credit" );
				end for;
			end if;
			if (not empty debits)
				for each debit in debits
					select one entry related by debit->Entry[R40.''recorded for''];
					UI::SendTAccount( Code:account.Code, Amount:debit.Amount, Date: entry.Date, Description: entry.Description, Type:"Debit" );
				end for;
			end if;
			
			if (not empty tcredits)
				for each tcredit in tcredits
					select one entry related by tcredit->Entry[R40.''recorded for''];
					UI::SendTAccount( Code:account.Code, Amount:tcredit.Amount, Date: entry.Date, Description: entry.Description, Type:"Credit" );
				end for;
			end if;
			
			if (not empty tdebits)
				for each tdebit in tdebits
					select one entry related by tdebit->Entry[R40.''recorded for''];
					UI::SendTAccount( Code:account.Code, Amount:tdebit.Amount, Date: entry.Date, Description: entry.Description, Type:"Debit" );
				end for;
			end if;
			
			

		end if;	

end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("b889a567-01cd-4c5f-8256-fb6cfebed0e1",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadTAccount',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("b9616493-caef-4c78-b0d5-4148987258d4",
	"964e4528-df32-45e2-b28e-47ebf5c4701f",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("b9616493-caef-4c78-b0d5-4148987258d4",
	'SendTAccount',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("964e4528-df32-45e2-b28e-47ebf5c4701f",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SendTAccount',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("6dc92d1d-d6d9-4eab-9684-c7a03210c265",
	"6303db2a-0872-4a00-9303-e7f5c19f327a",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("6dc92d1d-d6d9-4eab-9684-c7a03210c265",
	'ReadChartAccounts',
	'',
	'select many accounts from instances of AccountSpecification;
if (not empty accounts)
	for each account in accounts
		select many subaccounts related by account->AccountSpecification[R80.''divided''];
		if (empty subaccounts)
			select one programSubtype related by account->Program[R180];
			select one operatedAccount related by account->Account[R170.''operates''];
			select one operation related by operatedAccount->OperationalAccount[R200];
			if (not empty operatedAccount) and (not empty operation) and (empty programSubtype)
				UI::SendChartAccounts(Code: account.Code, Name: account.Name, OpeningBalance:operatedAccount.OpeningBalance, 
				AddedFunds:operation.AddedFunds, Reduction:operation.Reduction, TransferDebit: operatedAccount.TransferDebit, 
				TransferCredit:operatedAccount.TransferCredit, NetBalance:operation.NetBalance, Spending:operation.Spending, 
				GrandTotal:operation.GrandTotal, DocumantryCredits:operation.DocumantryCredits, 
				Custodies:operation.Custodies, Paid: operation.Paid, RemainingBalance:operation.RemainingBalance, Percentage:operation.Percentage);
			end if;
		end if;
	end for;
end if;

',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("6303db2a-0872-4a00-9303-e7f5c19f327a",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadChartAccounts',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("906f3a06-a80f-40f4-9919-4d8de57fb77e",
	"44c696b3-09fa-4f86-b339-b216e98d59a1",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("906f3a06-a80f-40f4-9919-4d8de57fb77e",
	'SendChartAccounts',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("44c696b3-09fa-4f86-b339-b216e98d59a1",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SendChartAccounts',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("f2ea4c11-0c7e-4763-aaac-d5114d4e775a",
	"23c49591-ddb9-472c-a127-aac9bf81fd5b",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("f2ea4c11-0c7e-4763-aaac-d5114d4e775a",
	'ReadChartAccount',
	'',
	'select any account from instances of AccountSpecification where selected.Code==param.Code;
if (not empty account)
		select many subaccounts related by account->AccountSpecification[R80.''divided''];
		if (empty subaccounts)
			select one operatedAccount related by account->Account[R170.''operates''];
		 	select one operation related by operatedAccount->OperationalAccount[R200];
			if (not empty operatedAccount) and (not empty operation)
				UI::SendChartAccounts(Code: account.Code, Name: account.Name, OpeningBalance:operatedAccount.OpeningBalance, 
		 		AddedFunds:operation.AddedFunds, Reduction:operation.Reduction, TransferDebit: operatedAccount.TransferDebit, 
		 		TransferCredit:operatedAccount.TransferCredit, NetBalance:operation.NetBalance, Spending:operation.Spending, 
		 		GrandTotal:operation.GrandTotal, DocumantryCredits:operation.DocumantryCredits, 
		 		Custodies:operation.Custodies, Paid: operation.Paid, RemainingBalance:operation.RemainingBalance, Percentage:operation.Percentage);
			end if;


		end if;

end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("23c49591-ddb9-472c-a127-aac9bf81fd5b",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadChartAccount',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("37831439-b91f-4484-8142-28ece6d4ece6",
	"826bbbc5-69a0-4741-a185-2c93ffe2a1b1",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("37831439-b91f-4484-8142-28ece6d4ece6",
	'CreateSalaryJournal',
	'',
	'

select any journal from instances of Journal where selected.Name == "Salary";

if (empty journal)
	create object instance newj of Journal;
	newj.Name = "Salary";
	newj.Description = "Journal for paying employee benifits";
	create object instance column of Column;
	column.Title = "Debit Cash/Credit Salary";
	column.Description = "";	
	relate column to newj across R160.''serves'';

	select any accountDebit from instances of AccountSpecification where selected.Code =="211111";
	select any accountCredit from instances of AccountSpecification where selected.Code =="32124";

	if ( not empty accountDebit) and (not empty accountDebit)
		relate column to accountDebit across R140.''debits'';
		relate column to accountCredit across R150.''credits'';
	end if;
end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("826bbbc5-69a0-4741-a185-2c93ffe2a1b1",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'CreateSalaryJournal',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("a763886c-6f9e-488f-a294-0a49b8fdffda",
	"65e6efde-caed-4815-8465-bbc6fa133eba",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("a763886c-6f9e-488f-a294-0a49b8fdffda",
	'AccountTransfers',
	'',
	'select any transfers from instances of Journal where selected.Name == "المناقلات";
if (not empty transfers)
	transfers.MakeTransferEntry( Column:param.Column, Date:param.Date, Description:param.Description, Amount:param.Amount );
end if;	

',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("65e6efde-caed-4815-8465-bbc6fa133eba",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'AccountTransfers',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("6462cac8-67ef-4312-97bc-c2979d34e94c",
	"fc97608a-1b57-458d-992c-b6c2c2a5b88f",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("6462cac8-67ef-4312-97bc-c2979d34e94c",
	'CreateTransfersJournal',
	'',
	'select any transfers from instances of Journal where selected.Name == "المناقلات";

if (empty transfers)
	create object instance transfers of Journal;
	transfers.Name = "المناقلات";
	transfers.Description= "مناقلة مبالغ بين الحسابات في السنة المالية";

end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("fc97608a-1b57-458d-992c-b6c2c2a5b88f",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'CreateTransfersJournal',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("e641c4c6-b692-4ad4-9da7-6713b89187ea",
	"4b5177fb-2cac-4c7f-92b2-229c367f53b8",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("e641c4c6-b692-4ad4-9da7-6713b89187ea",
	'AddTransferColumn',
	'',
	'select any column from instances of Column where selected.Title == param.Title;
select any transfers from instances of Journal where selected.Name == "المناقلات";

if (empty column) and ( not empty transfers)
	create object instance col of Column;
	col.Title = param.Title;
	relate col to transfers across R120.''corresponds'';
	select any credit from instances of AccountSpecification where selected.Code == param.TransferTo;
	select any debit from instances of AccountSpecification where selected.Code == param.TransferFrom;
	if (not empty credit) and (not empty debit)
		relate col to credit across R150.''credits'';
		relate col to debit across R140.''debits'';
	end if;


end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("4b5177fb-2cac-4c7f-92b2-229c367f53b8",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'AddTransferColumn',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("bf1fe666-b3f9-4e2d-86d1-4e93d7764a3f",
	"bb4e4d77-3f37-4c9c-94eb-e3f31dcbb010",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("bf1fe666-b3f9-4e2d-86d1-4e93d7764a3f",
	'SettleTransfer',
	'',
	'select any journal from instances of Journal where selected.Name == "المناقلات";
if (not empty journal)
	select any column related by journal->Column[R120.''has''] where selected.Title == param.Column;
	if (not empty column)
		select many amounts related by column->Amount[R130.''holds''] where selected.Amount==param.Amount;
		for each amount in amounts
			select one entry related by amount->Entry[R40.''recorded for''];
			if (entry.Date == param.Date)
				select one debit related by amount->Account[R240.''is debit transfer''];
				select one credit related by amount->Account[R230.''is credit transfer''];
				if (not empty debit) and (not empty credit)
					create object instance settleAmount of Amount;
					settleAmount.Amount = param.Amount;
					relate settleAmount to column across R130.''recorded under'';
					create object instance settleEntry of Entry;
					settleEntry.Date = TIM::current_seconds();
					settleEntry.Description = "تسوية" + entry.Description;
					relate debit to settleAmount across R230.''transfer credit of'';
					relate credit to settleAmount across R240.''transfer debit of'';
				end if;
			end if;
		end for;	
	end if;

end if;

',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("bb4e4d77-3f37-4c9c-94eb-e3f31dcbb010",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SettleTransfer',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("874256ba-65b0-4041-9ef1-f1790aaf9b2f",
	"1cf70f9f-c612-4f14-b4f6-3f2946648b55",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("874256ba-65b0-4041-9ef1-f1790aaf9b2f",
	'ReadTransferColumns',
	'',
	'select any transfer from instances of Journal where selected.Name == "المناقلات";

if (not empty transfer)
	select many columns related by transfer->Column[R120.''has''];
	for each column in columns
		UI::SendTransferColumns( Column:column.Title , Description:column.Description);
	end for;
end if;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("1cf70f9f-c612-4f14-b4f6-3f2946648b55",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadTransferColumns',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("572c13b4-cbfd-4efb-9634-9a80c3ec4762",
	"074d4a34-3a95-4d59-a677-628ffda62c64",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("572c13b4-cbfd-4efb-9634-9a80c3ec4762",
	'SendTransferColumns',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("074d4a34-3a95-4d59-a677-628ffda62c64",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SendTransferColumns',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("71a1be77-566a-4609-a42e-f338c41c2398",
	"7c8d21ee-c826-4e65-8c5c-0da79421b849",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("71a1be77-566a-4609-a42e-f338c41c2398",
	'AddFunds',
	'',
	'select any account from instances of AccountSpecification where selected.Code == param.Code;

if (not empty account)
	select one expenditure related by account->Expenditure[R180];
	if ( empty expenditure)
		select one operation related by account->Account[R170.''operates'']->OperationalAccount[R200];
		if (not empty operation)
			operation.AddedFunds = param.Amount;
		end if;
		
	end if;
end if;
 ',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("7c8d21ee-c826-4e65-8c5c-0da79421b849",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'AddFunds',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("a40546b4-d543-4ad9-b189-7ffcc22638b5",
	"58243d7f-7da7-4a71-b4f5-d861f0c33aa0",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("a40546b4-d543-4ad9-b189-7ffcc22638b5",
	'ReduceFunds',
	'',
	'select any account from instances of AccountSpecification where selected.Code == param.Code;

if (not empty account)
	select one expenditure related by account->Expenditure[R180];
	if ( empty expenditure)
		select one operation related by account->Account[R170.''operates'']->OperationalAccount[R200];
		if (not empty operation)
			operation.Reduction = param.Amount;
		end if;
		
	end if;
end if;
 ',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("58243d7f-7da7-4a71-b4f5-d861f0c33aa0",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReduceFunds',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("1924242d-1fa5-450d-9c7f-1496053d1d75",
	"2bdb8122-8b74-4ec9-ab0a-65179955ad54",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("1924242d-1fa5-450d-9c7f-1496053d1d75",
	'SendPrograms',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("2bdb8122-8b74-4ec9-ab0a-65179955ad54",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SendPrograms',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("0328f478-84d5-4a5a-906a-910f342fb80b",
	"983c1373-b2e3-4a25-9aa6-dd61c1d1c5a6",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("0328f478-84d5-4a5a-906a-910f342fb80b",
	'ReadProgram',
	'',
	'select any account from instances of AccountSpecification where selected.Code == param.Code; 

if (not empty account)
		select one program related by account->Program[R180];
		select one subaccount related by program->AccountSpecification[R210.''earmarks''];
		select one operationProgram related by account->Account[R170.''operates''];
		if (not empty subaccount)
			UI::SendPrograms( Code:account.Code, Name:account.Name, Description:account.Description,
			StartDate:program.StartDate, Duration:program.Duration, AccountCode:subaccount.Code, AccountName:subaccount.Name, 
			DedicatedFunds:program.DedicatedFunds, TransferDebit:operationProgram.TransferDebit, 
			TransferCredit:operationProgram.TransferCredit, FundsAfterTransfers:program.FundsAfterTransfers, 
			PastYearsSpending:program.PastYearsSpending, CurrentYearBudget:operationProgram.OpeningBalance, 
			Commitments:program.Commitments, RemainingFunds:program.RemainingFunds, Percentage:program.Percentage );
		end if;

end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("983c1373-b2e3-4a25-9aa6-dd61c1d1c5a6",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadProgram',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("77f2be29-cd01-4baf-8e10-0cdb44c2cf7e",
	"d03ec770-4b23-4379-a807-acf97011ad3d",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("77f2be29-cd01-4baf-8e10-0cdb44c2cf7e",
	'ReadAllBudgetAccounts',
	'',
	'select many accounts from instances of AccountSpecification;

select many expenditures from instances of Expenditure;
for each expend in expenditures
	select one account related by expend->AccountSpecification[R180];
		UI::SendAccountFunds( Code:account.Code, Name:account.Name, New:account.New, Ceiling:expend.CeilingFund, Requested:expend.RequestedFund, CeilingRevenue:expend.CeilingRevenue, RequestedRevenue:expend.RequestedRevenue);
		UI::Reply( msg:"Account fund sent", state:True );  
		LOG::LogInfo(message:"Sent: Account code "+ account.Code); 
		LOG::LogReal(message:"Ceiling:", r:expend.CeilingFund);
		LOG::LogReal(message:"Requested:", r:expend.RequestedFund);
		LOG::LogReal(message:"C-Revenue:", r:expend.CeilingRevenue);
		LOG::LogReal(message:"R-Revenue:", r:expend.RequestedRevenue);
end for;

select many programs from instances of Program;
for each program in programs
			ceiling = 0;
			requested = 0;
			revenueCeiling = 0;
			revenueRequested=0;
	select one account related by program->AccountSpecification[R210.''earmarks''];
	select many programAccounts related by program->AccountSpecification[R180]->Account[R202.''budgetize''];
	for each programAccount in programAccounts
		select one ceilingAccount related by programAccount->Ceiling[R190];
		select one requestedAccount related by programAccount->Requested[R190];
		if (not empty ceilingAccount)
			ceiling = ceilingAccount.Fund;
			revenueCeiling = ceilingAccount.Revenue;
		else
			requested = requestedAccount.Fund;
			revenueRequested=requestedAccount.Revenue;
		end if;
	end for;
			UI::SendAccountFunds( Code:account.Code, Name:account.Name, New:account.New, Ceiling:ceiling, Requested:requested, CeilingRevenue:revenueCeiling, RequestedRevenue:revenueRequested);
			UI::Reply( msg:"Account fund sent", state:True );  
			LOG::LogInfo(message:"Sent: Account code "+ account.Code); LOG::LogReal(message:"Ceiling:", r:ceiling);
			LOG::LogReal(message:"Requested:", r:requested); LOG::LogReal(message:"C-Revenue:", r:revenueCeiling);
			LOG::LogReal(message:"R-Revenue:", r:revenueRequested);
end for;

	for each account in accounts
if (not empty account)  
	select one expenditure related by account->Expenditure[R180];
	select many subaccounts related by account->AccountSpecification[R80.''divided''];	
	if (not empty expenditure) and (not empty subaccounts)
		UI::SendAccountFunds( Code:account.Code, Name:account.Name, New:account.New, Ceiling:expenditure.CeilingFund, Requested:expenditure.RequestedFund, CeilingRevenue:expenditure.CeilingRevenue, RequestedRevenue:expenditure.RequestedRevenue);
		UI::Reply( msg:"Account fund sent", state:True );  
		LOG::LogInfo(message:"Sent: Account code "+ account.Code); 
		LOG::LogReal(message:"Ceiling:", r:expenditure.CeilingFund);
		LOG::LogReal(message:"Requested:", r:expenditure.RequestedFund);
		LOG::LogReal(message:"C-Revenue:", r:expenditure.CeilingRevenue);
		LOG::LogReal(message:"R-Revenue:", r:expenditure.RequestedRevenue);


		for each subaccount in subaccounts
			select many budgetAccs related by subaccount->Account[R202.''budgetize''];
				ceiling = 0;
				requested = 0;
				revenueCeiling = 0;
				revenueRequested=0;
				
			for each bgt in budgetAccs
				select one ceilingSubtype related by bgt->Ceiling[R190];
				if (not empty ceilingSubtype)
					ceiling = ceilingSubtype.Fund; 
					revenueCeiling = ceilingSubtype.Revenue;
				end if;
				select one requestedSubtype related by bgt->Requested[R190];
				if (not empty requestedSubtype)
					requested = requestedSubtype.Fund;
					revenueRequested = requestedSubtype.Revenue;
				end if;
			 end for; 

			UI::SendAccountFunds( Code:subaccount.Code, Name:subaccount.Name, New: subaccount.New,Ceiling:ceiling, Requested:requested, CeilingRevenue:revenueCeiling, RequestedRevenue:revenueRequested);
  			UI::Reply( msg:"Subaccount funds sent", state:True );  
			LOG::LogInfo(message:"Sent: Subaccount code "+ subaccount.Code); 
			LOG::LogReal(message:"Ceiling:", r:ceiling);
			LOG::LogReal(message:"Requested:", r:requested);
			LOG::LogReal(message:"C-Revenue:", r:revenueCeiling);
			LOG::LogReal(message:"R-Revenue:", r:revenueRequested);

		end for;
		else 
			UI::Reply( msg:"Accounts are empty", state:False );  
	
		end if;
	
end if;
end for;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("d03ec770-4b23-4379-a807-acf97011ad3d",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadAllBudgetAccounts',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("1fbac8dd-7670-431b-b479-c36b4f224ee3",
	"25f94d89-02d2-4b1a-9dcb-08ae03a39f46",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("1fbac8dd-7670-431b-b479-c36b4f224ee3",
	'SendJournal',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("25f94d89-02d2-4b1a-9dcb-08ae03a39f46",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SendJournal',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("13cd371c-bca7-45d6-8e0a-30470c64b877",
	"e140b130-5703-40b6-948f-73122844e333",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("13cd371c-bca7-45d6-8e0a-30470c64b877",
	'ReadSalaryJournal',
	'',
	'select any journal from instances of Journal where selected.Name == "Salary";
if (not empty journal)
	select one column related by journal->Column[R160.''has single''];
	select many amounts related by column->Amount[R130.''holds''];
	for each amount in amounts
		select one entry related by amount->Entry[R40.''recorded for''];
		UI::SendJournal( Name:journal.Name, Description:journal.Description, ColumnTitle:column.Title, 
		ColumnDescription:column.Description, EntryDate:entry.Date, EntryDescription:entry.Description, 
		EntryAmount:amount.Amount);
		UI::Reply( msg:"Sent journal amount for entry within salary journal", state:True );
	end for;
else
		UI::Reply( msg:"Salary journal is not initiated", state:False );

end if;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("e140b130-5703-40b6-948f-73122844e333",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadSalaryJournal',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("4e24ba06-a545-4995-a757-3f7531a35fc3",
	"c453de33-2cb1-4f48-ae7e-2c8e6e957c7a",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("4e24ba06-a545-4995-a757-3f7531a35fc3",
	'ReadTransferJournal',
	'',
	'select any journal from instances of Journal where selected.Name == "المناقلات";
if (not empty journal)
	journal.ReadTransfers( Column:param.Column);

end if;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("c453de33-2cb1-4f48-ae7e-2c8e6e957c7a",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadTransferJournal',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("6f601ca3-7a8e-43c5-8484-23bea29ca7e4",
	"f8471943-f524-4541-840b-382b436abdb1",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("6f601ca3-7a8e-43c5-8484-23bea29ca7e4",
	'CreateSubAccount',
	'',
	'select any account from instances of AccountSpecification where selected.Code==param.Code;

if (empty account)
	create object instance account of AccountSpecification;
	account.Code = param.Code;
	account.Name = param.Name;
	account.Description= param.Description;
	account.New = True;
end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("f8471943-f524-4541-840b-382b436abdb1",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'CreateSubAccount',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("dbf45dd9-7b2a-4381-93fd-eb388c4de951",
	"020d8e36-a283-4deb-b691-699a8f5e87cb",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("dbf45dd9-7b2a-4381-93fd-eb388c4de951",
	'ReadBudgetAccounts',
	'',
	'
select many expenditures from instances of Expenditure;
for each expend in expenditures
	select one account related by expend->AccountSpecification[R180];
		UI::SendAccountFunds( Code:account.Code, Name:account.Name, New:account.New, Ceiling:expend.CeilingFund, Requested:expend.RequestedFund, CeilingRevenue:expend.CeilingRevenue, RequestedRevenue:expend.RequestedRevenue);
		UI::Reply( msg:"Account fund sent", state:True );  
		LOG::LogInfo(message:"Sent: Account code "+ account.Code); 
		LOG::LogReal(message:"Ceiling:", r:expend.CeilingFund);
		LOG::LogReal(message:"Requested:", r:expend.RequestedFund);
		LOG::LogReal(message:"C-Revenue:", r:expend.CeilingRevenue);
		LOG::LogReal(message:"R-Revenue:", r:expend.RequestedRevenue);
end for;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("020d8e36-a283-4deb-b691-699a8f5e87cb",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadBudgetAccounts',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("40428aa1-c119-4055-9e73-321895b233aa",
	"7017f587-96d1-4ef0-a888-ae64cf3a63be",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("40428aa1-c119-4055-9e73-321895b233aa",
	'ReadBudgetPrograms',
	'',
	'
select many expenditures from instances of Expenditure;
for each expend in expenditures
	select one account related by expend->AccountSpecification[R180];
		UI::SendAccountFunds( Code:account.Code, Name:account.Name, New:account.New, Ceiling:expend.ProgramCeilingFund, Requested:expend.ProgramRequestedFund, CeilingRevenue:expend.ProgramCeilingRevenue, RequestedRevenue:expend.ProgramRequestedRevenue);
		UI::Reply( msg:"Account fund sent", state:True );  
		LOG::LogInfo(message:"Sent: Account code "+ account.Code); 
		LOG::LogReal(message:"Ceiling:", r:expend.ProgramCeilingFund);
		LOG::LogReal(message:"Requested:", r:expend.ProgramRequestedFund);
		LOG::LogReal(message:"C-Revenue:", r:expend.ProgramCeilingRevenue);
		LOG::LogReal(message:"R-Revenue:", r:expend.ProgramRequestedRevenue);
end for;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("7017f587-96d1-4ef0-a888-ae64cf3a63be",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadBudgetPrograms',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("9796ce7f-3375-480f-9f3a-0cfcb5e84b1f",
	"cffbc631-c5c2-4077-9375-218b0527dee5",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("9796ce7f-3375-480f-9f3a-0cfcb5e84b1f",
	'ModifyCeiling',
	'',
	'select any account from instances of AccountSpecification where selected.Code == param.Code; 
select many budgetAccount related by account->Account[R202.''budgetize''];


for each baccount in budgetAccount
	select one ceiling related by baccount->Ceiling[R190];
	if (not empty ceiling)
		ceiling.Fund = param.Fund;
		ceiling.Revenue = param.Revenue;
		UI::Reply( msg:"Ceiling modified successfully ", state: True);
	end if;
	UI::Reply( msg:"Ceiling is unsuccessful: could not find account ", state: False);

end for;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("cffbc631-c5c2-4077-9375-218b0527dee5",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ModifyCeiling',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("9d96ec0d-b36a-4b2c-a814-a750bf2318f1",
	"ff71f4ae-3892-42b1-9cf0-8c111dc2cb5b",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("9d96ec0d-b36a-4b2c-a814-a750bf2318f1",
	'ModifyRequested',
	'',
	'select any account from instances of AccountSpecification where selected.Code == param.Code; 
select many budgetAccount related by account->Account[R202.''budgetize''];


for each baccount in budgetAccount
	select one requested related by baccount->Requested[R190];
	if (not empty requested)
		requested.Fund = param.Fund;
		requested.Revenue = param.Revenue;
		UI::Reply( msg:"Requested modified successfully ", state: True);
	end if;
	UI::Reply( msg:"Requested is unsuccessful: could not find account ", state: False);

end for;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("ff71f4ae-3892-42b1-9cf0-8c111dc2cb5b",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ModifyRequested',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("4d3daf4d-d551-4564-9a22-5bfce00fada6",
	"879d3639-0c10-48ed-99a6-0945d15c4708",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("4d3daf4d-d551-4564-9a22-5bfce00fada6",
	'CreateBudget',
	'',
	'select any budget from instances of Budget where selected.Year == param.Year;

 if (empty budget)
 	create object instance newBudget of Budget;
 	newBudget.Year = param.Year;
 	UI::Reply( msg:"Budget is created", state: True);
 	
 	select any prevBudget from instances of Budget where selected.Year == param.FromBudget;
 	if (not empty prevBudget)
 	 	select many accounts related by prevBudget->Account[R100.''assigned''];
 	 	for each account in accounts
 	 		//generate Account5:Close to account;
 	 		create object instance newAccount of Account;
 	 		select one ceiling related by account->Ceiling[R190];
 	 		select one requested related by account->Requested[R190];
 	 		if ( not empty ceiling)
 	 			create object instance ceilingAccount of Ceiling;
				ceilingAccount.Fund = ceiling.Fund;
				ceilingAccount.Revenue = ceiling.Revenue;
				relate ceilingAccount to newAccount across R190;
			else
 	 			create object instance requestedAccount of Requested;
				requestedAccount.Fund = requested.Fund;
				requestedAccount.Revenue = requested.Revenue;
				relate requestedAccount to newAccount across R190;
 	 		end if;
 	 		select one specAccount related by account->AccountSpecification[R202.''budgetized by''];
 	 		if (not empty specAccount)
 	 			relate specAccount to newAccount across R202.''budgetize'';
 	 			relate newAccount to newBudget across R100.''belongs to'';
 	 		//else 
 	 		end if;

 	 	end for;
 	else
 		UI::Reply( msg:"Previous budget does not exist", state: False);

 	end if;

 else
 	UI::Reply( msg:"Budget alrady exists", state: False);
 end if; 
 

',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("879d3639-0c10-48ed-99a6-0945d15c4708",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'CreateBudget',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("eb3327d1-0d9b-4dd3-a95f-162f8258ea3f",
	"b54dad13-94d0-4401-a0df-ea4c05e12c85",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("eb3327d1-0d9b-4dd3-a95f-162f8258ea3f",
	'Operationalize',
	'',
	'select any budget from instances of Budget where selected.Year == param.Year; 
select many accounts related by budget->Account[R100.''assigned''];
for each account in accounts
		generate Account4:Open to account;
end for;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("b54dad13-94d0-4401-a0df-ea4c05e12c85",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'Operationalize',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("f63596ac-397d-4145-a165-84863fc8c5f1",
	"7494c7e6-90ba-46fb-9a3b-f79244ca26a6",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("f63596ac-397d-4145-a165-84863fc8c5f1",
	'DisregardBudget',
	'Deleting a newly created budget which has not been operationalized ',
	'select any budget from instances of Budget where selected.Year == param.Year;

 if (not empty budget)
 		select many budgets related by budget->Account[R100.''assigned''];
 		for each ba in budgets
 			generate Account8:Disregarded to ba;
 		end for;
 else
 	UI::Reply( msg:"Budget does not exist", state: False);
 end if; 
 

',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("7494c7e6-90ba-46fb-9a3b-f79244ca26a6",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'DisregardBudget',
	'Deleting a newly created budget which has not been operationalized ',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("ad52ab26-3c05-4e4e-9239-80db2606e47a",
	"c11a0355-c209-48be-86a2-ab205a9c805a",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("ad52ab26-3c05-4e4e-9239-80db2606e47a",
	'ReadNewPrograms',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("c11a0355-c209-48be-86a2-ab205a9c805a",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadNewPrograms',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("3a28d20e-4d36-4b9b-9d02-74ec56dd3307",
	"3230f25e-00f9-42a1-a8b5-7fdd156e6f21",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("3a28d20e-4d36-4b9b-9d02-74ec56dd3307",
	'RelateProgram',
	'',
	'select any programAccount from instances of AccountSpecification where selected.Code == param.Program; 

select any account from instances of AccountSpecification where selected.Code == param.Account;

 if (not empty programAccount) and (not empty account)
 	select one program related by programAccount->Program[R180];
 	select one superAccount related by account->Expenditure[R180];
 	if (empty superAccount) 
 		select one earmarkAccount related by program->AccountSpecification[R210.''earmarks''];
 		if (not empty earmarkAccount)
 			unrelate earmarkAccount from program across R210.''earmarked by'';
 			relate program to account across R210.''earmarks'';
 			UI::Reply( msg:"Program is related to sub-account", state:True ); 
 		else
 			relate program to account across R210.''earmarks'';
 			UI::Reply( msg:"Program is related to sub-account", state:True );  
 		end if;
 	else
 		UI::Reply( msg:"Program cannot relate to account", state:False );  
 	end if;
 end if; 
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("3230f25e-00f9-42a1-a8b5-7fdd156e6f21",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'RelateProgram',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("780e1229-cf93-4a3b-990a-b1f54e6e0652",
	"7492ca92-a79c-4976-99cc-43df760f4934",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("780e1229-cf93-4a3b-990a-b1f54e6e0652",
	'UnrelateProgram',
	'',
	'select any account from instances of AccountSpecification where selected.Code == param.Program; 
select one program related by account->Program[R180];
if (not empty program)
	 	select one earmarkAccount related by program->AccountSpecification[R210.''earmarks''];	
 		if (not empty earmarkAccount)
 			unrelate earmarkAccount from program across R210.''earmarked by'';
 			UI::Reply( msg:"Program is unrelated to sub-account", state:True ); 
 		else
 			UI::Reply( msg:"Program is not earmarked by any sub-account", state:True );  
 		end if;
else
 		UI::Reply( msg:"Program is not found", state:False );  
end if;
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("7492ca92-a79c-4976-99cc-43df760f4934",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'UnrelateProgram',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("b9ae00cd-b671-4c73-9b89-3a585baaf804",
	"667e9bbf-70b1-49ba-b025-5739c424bdca",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("b9ae00cd-b671-4c73-9b89-3a585baaf804",
	'ReadEarmarkedPrograms',
	'',
	'select any account from instances of AccountSpecification where selected.Code==param.Code;

if (not empty account)
	select many programs related by account->Program[R210.''earmarked by''];
	if (not empty programs)
	for each program in programs
		select one parantProgram related by program->AccountSpecification[R180];
		select one operationProgram related by parantProgram->Account[R170.''operates''];
		if (not empty operationProgram) 
			UI::SendPrograms( Code:parantProgram.Code, Name:parantProgram.Name, Description:parantProgram.Description,
			StartDate:program.StartDate, Duration:program.Duration, AccountCode:account.Code, AccountName:account.Name, 
			DedicatedFunds:program.DedicatedFunds, TransferDebit:operationProgram.TransferDebit, 
			TransferCredit:operationProgram.TransferCredit, FundsAfterTransfers:program.FundsAfterTransfers, 
			PastYearsSpending:program.PastYearsSpending, CurrentYearBudget:operationProgram.OpeningBalance, 
			Commitments:program.Commitments, RemainingFunds:program.RemainingFunds, Percentage:program.Percentage );
			
			UI::Reply( msg:"An operationalized program is sent", state:True );  

		else
			UI::SendPrograms( Code:parantProgram.Code, Name:parantProgram.Name, Description:parantProgram.Description,
			StartDate:program.StartDate, Duration:program.Duration, AccountCode:account.Code, AccountName:account.Name, 
			DedicatedFunds:program.DedicatedFunds, TransferDebit:0, 
			TransferCredit:0, FundsAfterTransfers:0, 
			PastYearsSpending:0, CurrentYearBudget:0, 
			Commitments:0, RemainingFunds:0, Percentage:0 );
			
			UI::Reply( msg:"A new program sent", state:True );  

		end if;

	end for;
	end if;
end if;

',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("667e9bbf-70b1-49ba-b025-5739c424bdca",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadEarmarkedPrograms',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("f9775590-4da7-4192-a23e-d504d9e351ab",
	"beca86fe-b8bd-420a-bdcc-ffe5bde34313",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("f9775590-4da7-4192-a23e-d504d9e351ab",
	'ReadAllTransactions',
	'',
	'select many entries from instances of Entry;

for each entry in entries
	entry.sendTransaction();
end for; 
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("beca86fe-b8bd-420a-bdcc-ffe5bde34313",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadAllTransactions',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("7d73f5c7-45c6-44ef-81aa-0f1858a4ff17",
	"2fb303f1-2fc6-4e57-809a-d781521877bb",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("7d73f5c7-45c6-44ef-81aa-0f1858a4ff17",
	'PayAmount',
	'',
	'select many amounts from instances of Amount where selected.Amount == param.Amount;

for each amount in amounts
	select any entry from instances of Entry where selected.Date==param.Date and selected.Description==param.Description;
	select any journal from instances of Journal where selected.Name == param.Journal;
	if (not empty entry) and (not empty journal)
		generate Amount2:PaymentApproved to amount;
	else
		LOG::LogInfo(message:"Amount not found. One or more entries are incorrect" );	
	end if;
end for;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("2fb303f1-2fc6-4e57-809a-d781521877bb",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'PayAmount',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("5c1096bb-be4c-4c8f-9257-3fba24aaee6f",
	"94c5c798-cd59-4954-8dfc-deb2b48db517",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("5c1096bb-be4c-4c8f-9257-3fba24aaee6f",
	'PaySalary',
	'',
	'month = 30*24*60*60;
pastTwoMonths = TIM::current_seconds() - (2*month);
select any journal from instances of Journal where selected.Name =="Salary";

if (not empty journal)
	select many entries related by journal->Entry[R101.''holds''] where selected.Date >pastTwoMonths;
	for each entry in entries
		select any amount from instances of Amount;
		if (not empty amount)
			generate Amount2:PaymentApproved to amount;
		else 
			LOG::LogInfo(message:"Amount not found. One or more entries are incorrect" );	
		end if;
	end for;
	
end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("94c5c798-cd59-4954-8dfc-deb2b48db517",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'PaySalary',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("ad851852-3df0-4969-aac3-05478b6bb3a0",
	"80df410d-49f8-4e17-8c92-5c85b93bff92",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("ad851852-3df0-4969-aac3-05478b6bb3a0",
	'PendingPay',
	'',
	'select many entries from instances of Entry;
for each entry in entries 
	entry.sendPending();
end for;	
',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("80df410d-49f8-4e17-8c92-5c85b93bff92",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'PendingPay',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("0d4b2218-5935-41b8-b788-d771a98bb520",
	"67b89449-cdac-4c8d-9204-005216c0c726",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("0d4b2218-5935-41b8-b788-d771a98bb520",
	'ApproveTransfer',
	'',
	'select any column from instances of Column where selected.Title == param.Column;
if (not empty column)
	column.ApproveTransfer( Date:param.Date, Amount:param.Amount );
end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("67b89449-cdac-4c8d-9204-005216c0c726",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ApproveTransfer',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("e7b1dd72-8e43-493d-9e2b-465660f2b4d0",
	"b76b55d1-346e-4f6f-aaa6-1e3c06fe8237",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("e7b1dd72-8e43-493d-9e2b-465660f2b4d0",
	'PendingTransfers',
	'',
	'select any journal from instances of Journal where selected.Name == "المناقلات";

if (not empty journal)
	journal.readPending();
end if;',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("b76b55d1-346e-4f6f-aaa6-1e3c06fe8237",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'PendingTransfers',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("2958328e-a61e-4e6b-b775-83297e3df015",
	"a45f9acb-d7aa-49f8-9504-e4febb1905a6",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("2958328e-a61e-4e6b-b775-83297e3df015",
	'ReadAccountsLog',
	'',
	'ORM::ReadAccountsLog();',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("a45f9acb-d7aa-49f8-9504-e4febb1905a6",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'ReadAccountsLog',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO SPR_PEP
	VALUES ("0d91134d-0e32-4f23-a59e-1fc918b1cc66",
	"c2f407d1-1369-49aa-8fe8-c0f89af0c152",
	"84b7e49f-98e2-4539-b496-50575c189964");
INSERT INTO SPR_PS
	VALUES ("0d91134d-0e32-4f23-a59e-1fc918b1cc66",
	'SendAccountsLog',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("c2f407d1-1369-49aa-8fe8-c0f89af0c152",
	"4050d50b-4358-41d0-aaf7-7da0e117e17c",
	-1,
	'SendAccountsLog',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO C_I_PROXY
	VALUES ("4050d50b-4358-41d0-aaf7-7da0e117e17c",
	"00000000-0000-0000-0000-000000000000",
	'Finance',
	'',
	'../../Interfaces/Finance/Finance.xtuml');
INSERT INTO C_PO
	VALUES ("8eea900b-3bb5-4818-beb3-4d1f54273711",
	"8d322bed-f6f2-48fc-b59c-77870565eb6e",
	'ORM',
	0,
	0);
INSERT INTO C_IR
	VALUES ("4765e5c0-fee4-46e1-85fa-db2ae539c7c0",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	"00000000-0000-0000-0000-000000000000",
	"8eea900b-3bb5-4818-beb3-4d1f54273711");
INSERT INTO C_R
	VALUES ("4765e5c0-fee4-46e1-85fa-db2ae539c7c0",
	'ORM',
	'',
	'Unnamed Interface',
	'fms::ORM::ORM');
INSERT INTO SPR_REP
	VALUES ("ba110718-98fa-4c19-8097-ff371d734965",
	"14521c71-bdea-4743-898d-cbf73168bc5e",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("ba110718-98fa-4c19-8097-ff371d734965",
	'CreateClass',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("14521c71-bdea-4743-898d-cbf73168bc5e",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'CreateClass',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("0b26dafd-d13b-4f1d-b771-9a7ea0f7d5d6",
	"96d3a055-66c3-4669-9b9c-8378242831ee",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("0b26dafd-d13b-4f1d-b771-9a7ea0f7d5d6",
	'LogAccount',
	'',
	'ORM::LogAccount( Code:param.Code, Name:param.Name, Action:param.Action );',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("96d3a055-66c3-4669-9b9c-8378242831ee",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'LogAccount',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("d9673464-2dd2-42e8-9631-a7db8deaacc5",
	"157629d1-ea81-4fc3-8266-1380c6e7870b",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("d9673464-2dd2-42e8-9631-a7db8deaacc5",
	'ReadAccountsLog',
	'',
	'ORM::ReadAccountsLog();',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("157629d1-ea81-4fc3-8266-1380c6e7870b",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'ReadAccountsLog',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("82a74208-0e40-47a2-a37a-a917c4231998",
	"8bdf0c2f-2922-4923-ba7f-922405e84704",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("82a74208-0e40-47a2-a37a-a917c4231998",
	'SendAccountsLog',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("8bdf0c2f-2922-4923-ba7f-922405e84704",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'SendAccountsLog',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("9e52c07c-d6d3-4806-8512-aaff40b46165",
	"19f759b0-bb91-4d73-ba1b-b113ac493d8c",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("9e52c07c-d6d3-4806-8512-aaff40b46165",
	'AddAttributes',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("19f759b0-bb91-4d73-ba1b-b113ac493d8c",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'AddAttributes',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("b3cf141b-c965-4e90-bde3-64dae3b518f1",
	"4281f0f0-bd32-44c7-9a66-b4b42ec03374",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("b3cf141b-c965-4e90-bde3-64dae3b518f1",
	'CreateInstance',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("4281f0f0-bd32-44c7-9a66-b4b42ec03374",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'CreateInstance',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("8a89a4d2-1acb-4c32-b727-d441e197f527",
	"29b00879-31ff-4de8-83b3-3b16f1aaa797",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("8a89a4d2-1acb-4c32-b727-d441e197f527",
	'AddInstanceAttributes',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("29b00879-31ff-4de8-83b3-3b16f1aaa797",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'AddInstanceAttributes',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("1df5cbeb-07d6-422c-85ea-84ddddcd32a7",
	"bc1ffaed-c6b6-422e-9a12-0d468c0c2d24",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("1df5cbeb-07d6-422c-85ea-84ddddcd32a7",
	'ReadInstances',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("bc1ffaed-c6b6-422e-9a12-0d468c0c2d24",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'ReadInstances',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("743576d1-df0f-4583-a967-a1e9ca98186a",
	"4ce2a2a0-aecd-418f-b463-7b017262ea3e",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("743576d1-df0f-4583-a967-a1e9ca98186a",
	'RelateInstances',
	'',
	'',
	1,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("4ce2a2a0-aecd-418f-b463-7b017262ea3e",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'RelateInstances',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("14e81ed5-a91c-4efd-9771-a964836f327c",
	"bc229101-ab1c-49a9-bb09-9df267ca5365",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("14e81ed5-a91c-4efd-9771-a964836f327c",
	'RelateClasses',
	'',
	'',
	3,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("bc229101-ab1c-49a9-bb09-9df267ca5365",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'RelateClasses',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("847af515-8e79-4372-b43e-92eb076e6f67",
	"51d33072-0e9a-4119-9de3-2da59abdc4de",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("847af515-8e79-4372-b43e-92eb076e6f67",
	'ReadAssociations',
	'',
	'',
	3,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("51d33072-0e9a-4119-9de3-2da59abdc4de",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'ReadAssociations',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("9fc73c15-fd1c-427b-98ac-9da14a228f52",
	"6b525dcd-3faa-479b-8828-d3fb4aaa18aa",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("9fc73c15-fd1c-427b-98ac-9da14a228f52",
	'SendAssociations',
	'',
	'',
	3,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("6b525dcd-3faa-479b-8828-d3fb4aaa18aa",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'SendAssociations',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("b566375c-6434-4738-8869-5f1147411d14",
	"1abb6fac-dbad-4569-a17b-55c4ed85b691",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("b566375c-6434-4738-8869-5f1147411d14",
	'SendInstances',
	'',
	'',
	3,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("1abb6fac-dbad-4569-a17b-55c4ed85b691",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'SendInstances',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO SPR_REP
	VALUES ("d381c414-7344-4ec7-ac89-c51734f0acd0",
	"afbe6417-f184-48a5-ab98-b5e6aa424109",
	"4765e5c0-fee4-46e1-85fa-db2ae539c7c0");
INSERT INTO SPR_RS
	VALUES ("d381c414-7344-4ec7-ac89-c51734f0acd0",
	'UnrelateInstances',
	'',
	'',
	3,
	0);
INSERT INTO C_EP_PROXY
	VALUES ("afbe6417-f184-48a5-ab98-b5e6aa424109",
	"4b813629-fe71-4501-8e05-e1088b5edfea",
	-1,
	'UnrelateInstances',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO C_I_PROXY
	VALUES ("4b813629-fe71-4501-8e05-e1088b5edfea",
	"00000000-0000-0000-0000-000000000000",
	'ORM',
	'',
	'../../../../../ORM/models/ORM/Interfaces/ORM/ORM.xtuml');
INSERT INTO PE_PE
	VALUES ("8d322bed-f6f2-48fc-b59c-77870565eb6e",
	1,
	"7f1f267f-feec-4e9a-aa60-1a8f11d6b5d7",
	"00000000-0000-0000-0000-000000000000",
	2);
INSERT INTO EP_PKG_PROXY
	VALUES ("7f1f267f-feec-4e9a-aa60-1a8f11d6b5d7",
	"a012df04-a680-4110-97c4-3a91068c4346",
	"a012df04-a680-4110-97c4-3a91068c4346",
	'Fin',
	'',
	0,
	'../Fin.xtuml');
